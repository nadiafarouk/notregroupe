<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAVnSURBVHhe7Z3rrdxWEIPdQUpwCS7BJbgEl5ASUoJLcAkpISWkhJSQEpwzC18gkD8u9ODO1ZFI
        gICty+UMdqhz9PixH26KL4N/Df74yfp3HQsujN8Gfx/8Z/Bt8EvW30pT2uAi+Dj4ffDfQRo6sbT1mfps
        MCmWy/xeZnuYCGuW+b3M9nBi7Fnmi3V2b10lsj2cCHuWeRrgkQBle2jG3mV+zRL+Su/gILrPUtfqEhzE
        ew8i28M74IxLcbaHBsxytmV7MGPWLzTbwwFcaUnN9rABVz9rsj0I3O2LyfYwkKXxpt9B0s+4/CqY/W8d
        LnWCZJnfj6m/uyzzXkyzemaZfy1OeWJlme/HKb7zLPPnQPuqm2X+nHjpCZllfh5YZ1X/+TaYZX5OHFmt
        H0H4c5BExCzz58We7aGCg39YMsv8PNi6PeDBN2aZnxtrtgc8WKzl5I/wEqxZ0oyLeDC8D/FgeB/iwfA+
        3HwPGV6Hj9vAum3Y8iwgnJ/1rKBmLm/r6UN1NRnMgZoVzXA1/h5cfrhS82kwODdqRvQ0sGa6GvVuYGnw
        xto3wvOSZlasma5GPVcmk3Bebn5/82wVCOfiprP//3j2CDGcgzXDQ6g3S1teMYbnYM2sZmdB3S9+Hazb
        C3WhsbwYUbq6GiWtIt2RKB/S1WvRpW4t1SvVpW5Lj8+ofEirdDWjmtXLXt1/HqTiBNLV57dA1SMf0h15
        frH2fnpLj8+gfAik21pvF7qbVPXIh3QJgBndTap65EO6BMCM7iZVPfIhXQJgRneTqh75kC4BMKO7SVWP
        fEiXAJjR3aSqRz6kSwDM6G5S1SMf0iUAZnQ3qeqRD+kSADO6m1T1yId0CYAZ3U2qeuRDugTAjO4mVT3y
        IV0CYEZ3k6oe+ZAuATCju0lVj3xIlwCY0d2kqkc+pEsAzOhuUtUjH9IlAGZ0N6nqkQ/pEgAzuptU9ciH
        dAmAGd1NqnrkQ7oEwIzuJlU98iFdAmBGd5OqHvmQLgEwo7tJVY98SJcAmNHdpKpHPqRLAMzoblLVIx/S
        JQBmdDep6pEP6RIAM7qbVPXIh3QJgBndTap65EO6BMCM7iZVPfIhXQJgRneTqh75kC4BMKO7SVWPfEiX
        AJjR3aSqRz6kSwDM6G5S1SMf0iUAZnQ3qeqRD+kSADO6m1T1yId0CYAZ3U2qeuRDugTAjO4mVT3yIV0C
        YEZ3k6oe+ZAuATCju0lVj3xIlwCY0d2kqkc+pEsAzOhuUtUjH9IlAGZ0N6nqkQ/pEgAzuptU9ciHdAmA
        Gd1NqnrkQ7oEwIzuJlU98iFdAmBGd5OqHvmQLgEwo7tJVY98SJcAmNHdpKpHPqRLAMzoblLVIx/SJQBm
        dDep6pEP6RIAM7qbVPXIh3QJgBndTap65EO6BMCM7iZVPfIhXQJgRneTqh75kC4BMKO7SVWPfEiXAJjR
        3aSqRz6kSwDM6G5S1SMf0iUAZnQ3qeqRD+kSADO6m1T1yId0CYAZ9Xu0VHz506ZF0rl+TpV8SHenn461
        /VYw4dOgajA8D2tGNSsrvgzmF8TnYc2qZmbBx8EMfz7WzGp2h/F9kAqE52fN7hDqN+jJuLj1Aid8HZ9d
        m9UMd0Pdlhy5tQpeA3XLeujWUN3yHUpV8BKo1frQreHaByHBOUCzOrRaJwBzgWa1KwC1b9QH6wJDmYbn
        I82qZlh/W3Ut8HUw9/zXZc22ZozI/f59+MvzgW+DJAyvy5r5A+peP7w+H9cFWfrvy8dWQBd9dcz+SjF4
        N9Qs1Zx/OViUV4rBtKiZ0qzx4KHnx8Epoa718GACcD1sCkC9QKgPhNeherGHB8P7EA+G9yEeDO9DPBje
        h3gwvAU//PgPXpjoRL1l+jAAAAAASUVORK5CYII=
</value>
  </data>
</root>